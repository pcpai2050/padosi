AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  PadosiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref PadosiTable
      Environment:
        Variables:
          PADOSI_TABLE_NAME: !Ref PadosiTable

  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: register.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref Users
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref Users
      Events:
        RegisterApi:
          Type: Api
          Properties:
            Path: /auth/register
            Method: post

  HomeKitchensFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: homeKitchens.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref HomeKitchens
      Environment:
        Variables:
          HOME_KITCHENS_TABLE_NAME: !Ref HomeKitchens
      Events:
        HomeKitchensApiPost:
          Type: Api
          Properties:
            Path: /home-kitchens
            Method: post
        HomeKitchensApiGet:
          Type: Api
          Properties:
            Path: /home-kitchens
            Method: get

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: login.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref Users
      Environment:
        Variables:
          USERS_TABLE_NAME: !Ref Users
      Events:
        LoginApi:
          Type: Api
          Properties:
            Path: /auth/login
            Method: post

  PadosiTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PadosiTable
      AttributeDefinitions:
        - AttributeName: _id
          AttributeType: S
      KeySchema:
        - AttributeName: _id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  HomeKitchens:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: HomeKitchens
      AttributeDefinitions:
        - AttributeName: _id
          AttributeType: S
        - AttributeName: seller_id
          AttributeType: S
      KeySchema:
        - AttributeName: _id
          KeyType: HASH
        - AttributeName: seller_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  Users:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: _id
          AttributeType: S
      KeySchema:
        - AttributeName: _id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: padosi-frontend-bucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  FrontendDeployment:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::padosi-frontend-bucket/*"

Outputs:
  PadosiApiUrl:
    Description: "URL for the Padosi API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/padosi"
  RegisterApiUrl:
    Description: "URL for the Register API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/register"
  HomeKitchensApiUrl:
    Description: "URL for the Home Kitchens API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/home-kitchens"
  FrontendBucketUrl:
    Description: "URL for the Frontend S3 Bucket"
    Value: !Sub "http://${FrontendBucket}.s3-website-${AWS::Region}.amazonaws.com"
